Time complexity of the Merge Sort is O(nlogn).

This partcular merge sort follows divide and conquer approach.

Algorithm:
1. Divide the array into two halves
2. Sort the two halves
3. Merge the two sorted halves

Since the division takes p;ace logarithmically(log n times),
and each merge takes linear time(n), the overall time complexity
of merge sort is O(nlog n) * O(n) = O(nlogn).

Its efficiency is better than bubble sort, selection sort and insertion sort
which have O(n^2) time complexity.
When compared to Quick Sort, which also has O(nlogn) time complexity,
merge sort is generally considered more stable since it preserves the
original order of equal elements and has more predictable worst-case scenario
